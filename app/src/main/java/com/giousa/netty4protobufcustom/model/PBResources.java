// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: player2.proto at 16:1
package com.giousa.netty4protobufcustom.model;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class PBResources extends Message<PBResources, PBResources.Builder> {
  public static final ProtoAdapter<PBResources> ADAPTER = new ProtoAdapter_PBResources();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_GOLD = 0L;

  public static final Integer DEFAULT_ENERGY = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64",
      label = WireField.Label.REQUIRED
  )
  public final Long gold;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer energy;

  public PBResources(Long gold, Integer energy) {
    this(gold, energy, ByteString.EMPTY);
  }

  public PBResources(Long gold, Integer energy, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.gold = gold;
    this.energy = energy;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.gold = gold;
    builder.energy = energy;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBResources)) return false;
    PBResources o = (PBResources) other;
    return unknownFields().equals(o.unknownFields())
        && gold.equals(o.gold)
        && energy.equals(o.energy);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + gold.hashCode();
      result = result * 37 + energy.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", gold=").append(gold);
    builder.append(", energy=").append(energy);
    return builder.replace(0, 2, "PBResources{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBResources, Builder> {
    public Long gold;

    public Integer energy;

    public Builder() {
    }

    public Builder gold(Long gold) {
      this.gold = gold;
      return this;
    }

    public Builder energy(Integer energy) {
      this.energy = energy;
      return this;
    }

    @Override
    public PBResources build() {
      if (gold == null
          || energy == null) {
        throw Internal.missingRequiredFields(gold, "gold",
            energy, "energy");
      }
      return new PBResources(gold, energy, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBResources extends ProtoAdapter<PBResources> {
    ProtoAdapter_PBResources() {
      super(FieldEncoding.LENGTH_DELIMITED, PBResources.class);
    }

    @Override
    public int encodedSize(PBResources value) {
      return ProtoAdapter.INT64.encodedSizeWithTag(1, value.gold)
          + ProtoAdapter.INT32.encodedSizeWithTag(2, value.energy)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBResources value) throws IOException {
      ProtoAdapter.INT64.encodeWithTag(writer, 1, value.gold);
      ProtoAdapter.INT32.encodeWithTag(writer, 2, value.energy);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBResources decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.gold(ProtoAdapter.INT64.decode(reader)); break;
          case 2: builder.energy(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBResources redact(PBResources value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
